import{_ as s,c as n,o as e,ag as p}from"./chunks/framework.DdeahcKK.js";const t="/XIAOHUANG_BLOG/docs/%E6%A0%91%E8%8E%93%E6%B4%BE_localdata/image-20241213182856968.png",m=JSON.parse('{"title":"树莓派","description":"","frontmatter":{},"headers":[],"relativePath":"xiaohuang_mdwork/硬件资料/硬件资料主页内容.md/树莓派.md","filePath":"xiaohuang_mdwork/硬件资料/硬件资料主页内容.md/树莓派.md"}'),i={name:"xiaohuang_mdwork/硬件资料/硬件资料主页内容.md/树莓派.md"};function l(c,a,o,d,r,h){return e(),n("div",null,a[0]||(a[0]=[p('<h1 id="树莓派" tabindex="-1">树莓派 <a class="header-anchor" href="#树莓派" aria-label="Permalink to &quot;树莓派&quot;">​</a></h1><h2 id="pi-5" tabindex="-1">Pi 5 <a class="header-anchor" href="#pi-5" aria-label="Permalink to &quot;Pi 5&quot;">​</a></h2><h3 id="资料" tabindex="-1">资料 <a class="header-anchor" href="#资料" aria-label="Permalink to &quot;资料&quot;">​</a></h3><p><a href="https://shumeipai.nxez.com/" target="_blank" rel="noreferrer">https://shumeipai.nxez.com/</a></p><p>引脚教程：<a href="https://pinout.vvzero.com/pinout/pin10_gpio15" target="_blank" rel="noreferrer">GPIO 15 (UART 接收) - 由树莓派引脚定义导航站解释</a></p><img src="'+t+`" alt="image-20241213182856968" style="zoom:33%;"><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>from work_positionacceptfun import receive_pos</span></span>
<span class="line"><span>from work_wavacceptfun import acceptwav</span></span></code></pre></div><blockquote><p>SOC报错</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt install python3-rpi-lgpio</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo python3 /home/RPi/Desktop/code/work_combine.py</span></span></code></pre></div><p>强制安装包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo pip install --break-system-packages -i https://mirrors.tencent.com/pypi/simple/ --upgrade tencentcloud-sdk-python</span></span>
<span class="line"><span>sudo pip install --break-system-packages playsound</span></span></code></pre></div></blockquote><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><h4 id="vnc连接树莓派" tabindex="-1">VNC连接树莓派 <a class="header-anchor" href="#vnc连接树莓派" aria-label="Permalink to &quot;VNC连接树莓派&quot;">​</a></h4><p>参考：<a href="https://blog.csdn.net/BROKEN__Y/article/details/131815597?ops_request_misc=%7B%22request%5Fid%22%3A%22201953F7-BEE2-4287-A5B3-36F6AEB07DC4%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=201953F7-BEE2-4287-A5B3-36F6AEB07DC4&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-131815597-null-null.142%5Ev100%5Epc_search_result_base4&amp;utm_term=%E6%A0%91%E8%8E%93%E6%B4%BEvnc%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">【最新教程】树莓派安装系统及VNC远程桌面连接_树莓派vnc-CSDN博客</a></p><p>要先通过putty连接树莓派开启vnc</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo raspi-config</span></span></code></pre></div><p>找到：Interfacing Options<code>-&gt;</code>VNC<code>-&gt;</code>Yes</p><p>然后vncserver找到IP输入即可</p><blockquote><p>VNC复制粘贴</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.安装sudo apt install autocutsel</span></span>
<span class="line"><span>2.运行autocutsel -f</span></span></code></pre></div></blockquote><h4 id="远程桌面连接" tabindex="-1">远程桌面连接 <a class="header-anchor" href="#远程桌面连接" aria-label="Permalink to &quot;远程桌面连接&quot;">​</a></h4><p>安装xrdp</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install xrdp</span></span></code></pre></div><h4 id="中文显示设置" tabindex="-1">中文显示设置 <a class="header-anchor" href="#中文显示设置" aria-label="Permalink to &quot;中文显示设置&quot;">​</a></h4><p>参考：<a href="https://blog.csdn.net/qq_46279755/article/details/141906261?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BC%96%E7%A0%81%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%87utf-8&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-141906261.142%5Ev100%5Epc_search_result_base3&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">关于在raspi中设置中文语言_ubuntu raspberry pi 操作系统中文-CSDN博客</a></p><h4 id="功能包" tabindex="-1">功能包 <a class="header-anchor" href="#功能包" aria-label="Permalink to &quot;功能包&quot;">​</a></h4><h5 id="虚拟环境" tabindex="-1">虚拟环境 <a class="header-anchor" href="#虚拟环境" aria-label="Permalink to &quot;虚拟环境&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt install python3-venv python3-pip</span></span>
<span class="line"><span>python3 -m venv venv1</span></span>
<span class="line"><span>source venv1/bin/activate</span></span></code></pre></div><p>ubuntu</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install portaudio19-dev python3-dev</span></span>
<span class="line"><span>pip install pyaudio</span></span>
<span class="line"><span>sudo apt-get install ffmpeg</span></span>
<span class="line"><span>pip3 install pydub</span></span></code></pre></div><h3 id="功能代码" tabindex="-1">功能代码 <a class="header-anchor" href="#功能代码" aria-label="Permalink to &quot;功能代码&quot;">​</a></h3><h4 id="uart" tabindex="-1">UART <a class="header-anchor" href="#uart" aria-label="Permalink to &quot;UART&quot;">​</a></h4><p>教程：<a href="https://blog.csdn.net/WU1707640034/article/details/143824076?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_utm_term~default-0-143824076-blog-136935745.235%5Ev43%5Epc_blog_bottom_relevance_base2&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=3" target="_blank" rel="noreferrer">树莓派5串口应用_树莓派5 uart-CSDN博客</a></p><p>串口调试助手： <a href="......%5CDS_diansai%5CSTM32f407vgt6%5C%E5%8A%9F%E8%83%BD%E9%A9%B1%E5%8A%A8%5C%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%5C3.%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B%5C%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7.exe">串口调试工具.exe</a></p><p>在线串口调试助手：<a href="https://serial.keysking.com/" target="_blank" rel="noreferrer">波特律动 串口助手</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pip install pyserial</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import serial</span></span>
<span class="line"><span>import time</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Configure serial port parameters</span></span>
<span class="line"><span>ser = serial.Serial(&#39;/dev/ttyAMA0&#39;,115200, timeout=1)  # &#39;/dev/serial0&#39; is the default serial port on Raspberry Pi</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Wait for the serial port to initialize</span></span>
<span class="line"><span>time.sleep(2)</span></span>
<span class="line"><span>while True:</span></span>
<span class="line"><span>    # Send data</span></span>
<span class="line"><span>    ser.write(b&#39;Hello, Raspberry Pi UART!&#39;)</span></span>
<span class="line"><span>    print(&quot;writed&quot;)</span></span>
<span class="line"><span>    time.sleep(0.5)</span></span>
<span class="line"><span>    # Close the serial connection</span></span>
<span class="line"><span>else:</span></span>
<span class="line"><span>    ser.close()</span></span></code></pre></div><h4 id="gpio" tabindex="-1">GPIO <a class="header-anchor" href="#gpio" aria-label="Permalink to &quot;GPIO&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt install python3-rpi.gpio</span></span></code></pre></div><h2 id="rasp-lite" tabindex="-1">Rasp_Lite <a class="header-anchor" href="#rasp-lite" aria-label="Permalink to &quot;Rasp_Lite&quot;">​</a></h2><h3 id="摄像头" tabindex="-1">摄像头 <a class="header-anchor" href="#摄像头" aria-label="Permalink to &quot;摄像头&quot;">​</a></h3><h4 id="摄像头配置" tabindex="-1">摄像头配置 <a class="header-anchor" href="#摄像头配置" aria-label="Permalink to &quot;摄像头配置&quot;">​</a></h4><p>2023年以后的没有camera了</p><p><a href="https://blog.csdn.net/TENET123/article/details/140963450?ops_request_misc=%7B%22request%5Fid%22%3A%221cfe5ad3df6fa96420d2aac82e52bcf1%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=1cfe5ad3df6fa96420d2aac82e52bcf1&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-140963450-null-null.142%5Ev100%5Epc_search_result_base3&amp;utm_term=%E6%A0%91%E8%8E%93%E6%B4%BE%E6%B2%A1%E6%89%BE%E5%88%B0camera&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">树莓派新版本在interface options中找不到camera选项_树莓派没有camera选项-CSDN博客</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt install libcamera-apps</span></span>
<span class="line"><span>sudo apt install libcamera-tools</span></span>
<span class="line"><span>libcamera-hello</span></span>
<span class="line"><span>libcamera-still -o test.jpg</span></span>
<span class="line"><span>libcamera-vid -o test.h264 -t 10000</span></span></code></pre></div><p>使用opencv</p><p><a href="https://blog.csdn.net/m0_74196680/article/details/140952475?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Ctr-1-140952475-blog-140963450.235%5Ev43%5Epc_blog_bottom_relevance_base2&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Ctr-1-140952475-blog-140963450.235%5Ev43%5Epc_blog_bottom_relevance_base2" target="_blank" rel="noreferrer">树莓派 Interface Option 中没有camera选项_树莓派没有camera选项-CSDN博客</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo nano /boot/firmware/config.txt</span></span></code></pre></div><p>将</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Automatically load overlays for detected cameras</span></span>
<span class="line"><span>camera_auto_detect=1</span></span></code></pre></div><p>修改成</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Automatically load overlays for detected cameras</span></span>
<span class="line"><span>#camera_auto_detect=1</span></span>
<span class="line"><span>start_x=1</span></span></code></pre></div><p>重启后运行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vcgencmd get_camera</span></span></code></pre></div><p>使用：<a href="https://blog.csdn.net/qq_51679917/article/details/130187579?ops_request_misc=%7B%22request%5Fid%22%3A%225de999fce01c7479dfb955d68659b011%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=5de999fce01c7479dfb955d68659b011&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-6-130187579-null-null.142%5Ev100%5Epc_search_result_base3&amp;utm_term=%E6%97%A0%E7%95%8C%E9%9D%A2%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8csi%E6%91%84%E5%83%8F%E5%A4%B4&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">树莓派利用python-opencv使用CSI摄像头调用监控视频_树莓派python中怎么打开csmi摄像头-CSDN博客</a></p><p>输入 ls /dev 查看树莓派是否连接到摄像头，查看是否右 video0如果没有则是你的线没有插紧。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev</span></span></code></pre></div><p>安装虚拟环境</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#pi zero 2w版本（anaconda安装）</span></span>
<span class="line"><span>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh</span></span>
<span class="line"><span>bash Miniconda3-latest-Linux-aarch64.sh</span></span>
<span class="line"><span>source ~/miniconda3/bin/activate</span></span>
<span class="line"><span>conda init</span></span>
<span class="line"><span>conda activate torch_py_3p9</span></span></code></pre></div><p>安装python</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt install python3-pip</span></span>
<span class="line"><span>sudo apt install python3-full python3-venv</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt upgrade -y</span></span>
<span class="line"><span>pip cache purge</span></span>
<span class="line"><span>pip install opencv-python</span></span></code></pre></div><p>编写摄像头代码调用摄像头</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /home/RPi/pics    #进入树莓派桌面</span></span>
<span class="line"><span>touch csidemo.py #touch创建csidemo.py文件用于编写CSI摄像头代码</span></span>
<span class="line"><span>sudo nano csidemo.py</span></span></code></pre></div><p>写入</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /home/RPi/pics</span></span>
<span class="line"><span>python3 csidemo.py</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import cv2     # 导入OpenCV库</span></span>
<span class="line"><span>import time     # 导入时间库</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 打开摄像头（默认设备ID是0，通常是内置摄像头）</span></span>
<span class="line"><span>cap = cv2.VideoCapture(0)    </span></span>
<span class="line"><span></span></span>
<span class="line"><span># 检查摄像头是否成功打开</span></span>
<span class="line"><span>if not cap.isOpened():</span></span>
<span class="line"><span>    print(&quot;错误：无法打开摄像头&quot;)</span></span>
<span class="line"><span>    exit()</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 设置摄像头的参数：宽度、长度和帧率</span></span>
<span class="line"><span>cap.set(3, 600)  # 设置图像宽度为600</span></span>
<span class="line"><span>cap.set(4, 480)  # 设置图像高度为480</span></span>
<span class="line"><span>cap.set(5, 40)   # 设置帧率为40</span></span>
<span class="line"><span></span></span>
<span class="line"><span>frame_count = 0  # 用来计数帧数</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 循环读取图像帧</span></span>
<span class="line"><span>while True:</span></span>
<span class="line"><span>    ret, frame = cap.read()  # 读取一帧图像</span></span>
<span class="line"><span>    if not ret:</span></span>
<span class="line"><span>        print(&quot;无法读取摄像头数据，退出程序&quot;)</span></span>
<span class="line"><span>        break  # 如果读取失败，退出循环</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    frame_count += 1  # 增加帧计数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # 在图像上添加帧计数和当前时间戳</span></span>
<span class="line"><span>    timestamp = time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;)  # 获取当前时间戳</span></span>
<span class="line"><span>    cv2.putText(frame, f&quot;Frame: {frame_count}&quot;, (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)</span></span>
<span class="line"><span>    cv2.putText(frame, f&quot;Timestamp: {timestamp}&quot;, (10, 60), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # 显示图像</span></span>
<span class="line"><span>    cv2.imshow(&#39;Video&#39;, frame)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # 检查是否按下 &#39;q&#39; 键，按下则退出</span></span>
<span class="line"><span>    if cv2.waitKey(1) &amp; 0xFF == ord(&#39;q&#39;):</span></span>
<span class="line"><span>        print(&quot;退出程序&quot;)</span></span>
<span class="line"><span>        break</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 释放资源并关闭窗口</span></span>
<span class="line"><span>cap.release()          # 释放摄像头</span></span>
<span class="line"><span>cv2.destroyAllWindows()  # 关闭所有OpenCV窗口</span></span></code></pre></div><p>​</p>`,63)]))}const b=s(i,[["render",l]]);export{m as __pageData,b as default};
